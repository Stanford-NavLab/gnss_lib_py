name: pip-install

on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:


jobs:
  build:
    name: Testing pip install, updating requirements.txt
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.8"]
        os: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
#     - name: Install Poetry
#       uses: snok/install-poetry@v1
#       with:
#         virtualenvs-create: true
#         virtualenvs-in-project: true
#         installer-parallel: true # default option selected currently
#     # Load cached environment, if it exists
#     - name: Load cached poetry environment
#       id: cached-poetry-dependencies
#       uses: actions/cache@v2
#       with:
#         path: .venv
#         key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
#     - name: Install dependencies
#       if: steps.cached-poetry-dependencies.outputs.catch-hit != 'true'
#       run: |
#         poetry install
#         poetry export -f requirements.txt --output requirements.txt --without-hashes
    - name: Install using pip
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e .
    - name: Test on pytest
      run:
        pytest
